service: webschedule

frameworkVersion: ">=1.0.0"

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-domain-manager

custom:
  secrets: ${file(secrets.json)}
  pythonRequirements:
    pythonBin: "/home/alejandro/.anaconda3/envs/django/bin/python3.8"
    useDownloadCache: true
    useStaticCache: true
    slim: true
    slimPatternsAppendDefaults: false
    slimPatterns:
      - '*/*.py[c|o]'
      - '*/__pycache__'
    strip: false
    fileName: requirements.txt
    layer:
      name: 'PythonRequirementsLambdaLayer'
      description: 'Python requirements Lambda Layer'
      compatibleRuntimes:
        - python3.8
      allowedAccounts:
        - '*'
  wsgi:
    app: webschedule.wsgi.application
    packRequirements: false
  customDomain:
    domainName: reservarmisa.com
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: 'edge'
    securityPolicy: tls_1_2
    apiType: rest

provider:
  name: aws
  region: us-east-1
  runtime: python3.8
  stage: prod
  profile: web_alejo
  apiGateway:
    binaryMediaTypes:
      - '*/*'
  environment:
    APP_STORAGE: '/tmp'
    SCHEDULEDB_NAME: ${self:custom.secrets.SCHEDULEDB_NAME}
    SCHEDULEDB_USER: ${self:custom.secrets.SCHEDULEDB_USER}
    SCHEDULEDB_PASS: ${self:custom.secrets.SCHEDULEDB_PASS}
    SCHEDULEDB_HOST: ${self:custom.secrets.SCHEDULEDB_HOST}
    SCHEDULEDB_PORT: ${self:custom.secrets.SCHEDULEDB_PORT}

package:
  exclude:
    - node_modules/**
    - README.md
    - db.sqlite3
    - Dockerfile
    - secrets.json

functions:
  website:
    handler: wsgi_handler.handler
    description: 'Website/API de webschedule.'
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - { Ref: PythonRequirementsLambdaLayer } 
    events:
        - http: 'ANY /'
        - http: 'ANY /{proxy+}'
